<!DOCTYPE html>
<html lang="en">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <%- include ('component/head.ejs') %>
<body>
    <%- include ('component/header.ejs') %>
    <div class="page-container">
        <!-- Sidebar -->
        <div class="user-aside">
            <%- include ('component/useraside.ejs') %>
        </div>

        <!-- Main Content -->
        <section class="main-content">
            <div class="container mt-4">
                <h2 class="section-title mb-4">My Wallet</h2>
                <div class="address-divider"></div>

                <div class="wallet-container">
                    <div class="balance-card">
                        <div class="balance-icon">
                            <i class="fas fa-wallet"></i>
                        </div>
                        <div class="balance-details">
                            <span class="balance-label">Available Balance</span>
                            <h1 class="balance-amount">₹<span id="balanceAmount"><%=wallet.balance%></span></h1>
                        </div>
                        <button class="btn add-money-btn" data-bs-toggle="modal" data-bs-target="#addMoneyModal">
                            <i class="fas fa-plus-circle me-2"></i>Add Money
                        </button>
                    </div>
                </div>
            </div>
        </section>
    </div>

    <!-- Add Money Modal -->
    <div class="modal fade" id="addMoneyModal" tabindex="-1" aria-labelledby="addMoneyModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addMoneyModalLabel">Add Money to Wallet</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-4">
                        <label for="amount" class="form-label">Enter Amount (₹)</label>
                        <input type="number" class="form-control form-control-lg" id="amount" placeholder="Enter amount" min="1">
                    </div>
                    <div class="quick-amount">
                        <button class="btn btn-outline-primary amount-chip" data-amount="100">₹100</button>
                        <button class="btn btn-outline-primary amount-chip" data-amount="500">₹500</button>
                        <button class="btn btn-outline-primary amount-chip" data-amount="1000">₹1000</button>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="confirmAddMoney">Add Money</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Success Toast -->
    <div class="toast align-items-center text-white bg-success border-0 position-fixed bottom-0 end-0 m-3" role="alert" aria-live="assertive" aria-atomic="true" id="successToast">
        <div class="d-flex">
            <div class="toast-body">
                <i class="fas fa-check-circle me-2"></i>Amount added successfully!
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>

    <!-- Styles -->
    <style>
    .page-container {
        display: flex;
        min-height: 100vh;
        background-color: #f8f9fa;
    }

    .user-aside {
        width: 260px;
        background-color: #ffffff;
        box-shadow: 2px 0 15px rgba(0, 0, 0, 0.05);
        padding: 30px 20px;
    }

    .main-content {
        flex: 1;
        padding: 30px;
        background-color: #f8f9fa;
    }

    .section-title {
        color: #2c3e50;
        font-weight: 700;
        font-size: 1.8rem;
    }

    .wallet-container {
        max-width: 800px;
        margin: 0 auto;
    }

    .balance-card {
        background: linear-gradient(135deg, #2196f3, #1976d2);
        border-radius: 15px;
        padding: 40px;
        color: white;
        display: flex;
        align-items: center;
        box-shadow: 0 10px 20px rgba(33, 150, 243, 0.15);
        position: relative;
        overflow: hidden;
    }

    .balance-card::before {
        content: "";
        position: absolute;
        top: -50px;
        right: -30px;
        width: 150px;
        height: 150px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 50%;
    }

    .balance-icon {
        font-size: 2.5rem;
        margin-right: 25px;
        z-index: 1;
    }

    .balance-details {
        flex-grow: 1;
        z-index: 1;
    }

    .balance-label {
        color: rgba(255, 255, 255, 0.9);
        font-size: 1rem;
        margin-bottom: 5px;
    }

    .balance-amount {
        font-weight: 700;
        font-size: 2.5rem;
        margin: 0;
        letter-spacing: 1px;
    }

    .add-money-btn {
        background: rgba(255, 255, 255, 0.15);
        border: 2px solid rgba(255, 255, 255, 0.2);
        color: white;
        padding: 12px 25px;
        border-radius: 8px;
        font-weight: 600;
        transition: all 0.3s ease;
        z-index: 1;
    }

    .add-money-btn:hover {
        background: rgba(255, 255, 255, 0.25);
        transform: translateY(-2px);
    }

    .quick-amount {
        display: flex;
        gap: 15px;
        margin-top: 20px;
    }

    .amount-chip {
        background: none;
        border: 2px solid #2196f3;
        color: #2196f3;
        padding: 8px 20px;
        border-radius: 25px;
        cursor: pointer;
        font-weight: 500;
        transition: all 0.2s ease;
    }

    .amount-chip:hover {
        background: #2196f3;
        color: white;
        transform: translateY(-1px);
    }

    .modal-content {
        border-radius: 15px;
        overflow: hidden;
        border: none;
    }

    .modal-header {
        background: #f8f9fa;
        border-bottom: none;
        padding: 25px;
    }

    .modal-title {
        font-weight: 700;
        color: #2c3e50;
    }

    .modal-body {
        padding: 25px;
    }

    .form-control-lg {
        border-radius: 10px;
        padding: 15px;
        border: 2px solid #e0e0e0;
    }

    .form-control-lg:focus {
        border-color: #2196f3;
        box-shadow: none;
    }

    #confirmAddMoney {
        padding: 12px 30px;
        border-radius: 8px;
        font-weight: 600;
    }

    .toast {
        border-radius: 10px;
    }
    </style>

    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const amountChips = document.querySelectorAll('.amount-chip');
        const amountInput = document.getElementById('amount');
        const confirmAddMoneyBtn = document.getElementById('confirmAddMoney');
        const walletId = '<%= wallet._id %>'; // Assuming wallet object is passed from backend

        amountChips.forEach(chip => {
            chip.addEventListener('click', function() {
                const amount = this.getAttribute('data-amount');
                amountInput.value = amount;
            });
        });

        confirmAddMoneyBtn.addEventListener('click', async function() {
            const amount = parseFloat(amountInput.value);
            
            // Validate amount
            if (isNaN(amount) || amount <= 0) {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Amount',
                    text: 'Please enter a valid amount greater than 0'
                });
                return;
            }

            try {
                // Show loading spinner
                Swal.fire({
                    title: 'Adding Money...',
                    html: 'Please wait while we process your request',
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });

                // Send request to backend
                const response = await fetch('/add-wallet-money', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        walletId: walletId,
                        amount: amount
                    })
                });

                const result = await response.json();

                // Handle response
                if (result.success) {
                    // Update balance on the page
                    const balanceElement = document.getElementById('balanceAmount');
                    balanceElement.textContent = result.newBalance.toFixed(2);

                    // Close modal
                    const addMoneyModal = bootstrap.Modal.getInstance(document.getElementById('addMoneyModal'));
                    if (addMoneyModal) {
                        addMoneyModal.hide();
                    }

                    // Show success toast
                    Swal.fire({
                        icon: 'success',
                        title: 'Money Added Successfully!',
                        text: `₹${amount} has been added to your wallet`,
                        timer: 2000,
                        showConfirmButton: false
                    });

                    // Reset input
                    amountInput.value = '';
                } else {
                    // Show error message from backend
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: result.message || 'Failed to add money to wallet'
                    });
                }
            } catch (error) {
                console.error('Error adding money:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Network Error',
                    text: 'Unable to process your request. Please try again.'
                });
            }
        });
    });
    </script>
</body>
</html>