<!DOCTYPE html>
<html lang="en">
<head>
    <%- include ('component/head.ejs') %> 
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        .reset-form {
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 0 20px rgba(0,0,0,0.1);
            max-width: 500px;
            width: 100%;
            margin: 0 auto;
            padding: 3rem 2rem;
        }

        .error-message {
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 0.25rem;
            display: none;
        }

        .warning-message {
            color: #ffc107;
            font-size: 0.875rem;
            margin-top: 0.25rem;
            padding: 10px;
            background-color: #fff3cd;
            border-radius: 4px;
            display: none;
        }

        .input-error {
            border-color: #dc3545 !important;
        }
    </style>
</head>

<body class="animsition">
    <!-- Header -->
    <%- include ('component/header.ejs') %> 

    <!-- Content page -->
    <section class="bg0 p-t-104 p-b-116">
        <div class="container">
            <div class="reset-form">
                <h4 class="mtext-105 cl2 txt-center p-b-30">Reset Password</h4>

                <!-- Warning messages div -->
                <div class="warning-message" id="warningMessage"></div>

                <form action="/reset-password" method="post" id="resetForm" novalidate>
                    <div class="bor8 m-b-20 how-pos4-parent">
                        <input class="stext-111 cl2 plh3 size-116 p-l-20 p-r-30" 
                               type="password" 
                               name="newPassword" 
                               id="newPassword"
                               placeholder="New Password"
                               required>
                        <div class="error-message" id="newPasswordError"></div>
                    </div>

                    <div class="bor8 m-b-20 how-pos4-parent">
                        <input class="stext-111 cl2 plh3 size-116 p-l-20 p-r-30" 
                               type="password" 
                               name="confirmPassword" 
                               id="confirmPassword"
                               placeholder="Confirm Password"
                               required>
                        <div class="error-message" id="confirmPasswordError"></div>
                    </div>

                    <input type="submit" 
                           class="flex-c-m stext-101 cl0 size-121 bg-primary bor1 hov-btn3 p-lr-15 trans-04 pointer" 
                           value="Reset Password">
                </form>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <%- include ('component/footer.ejs') %>

    <!-- Scripts -->
    <script src="vendor/jquery/jquery-3.2.1.min.js"></script>
    <%- include ('component/script.ejs') %> 

    <script>
        $(document).ready(function() {
            const form = $('#resetForm');
            const newPasswordInput = $('#newPassword');
            const confirmPasswordInput = $('#confirmPassword');
            const newPasswordError = $('#newPasswordError');
            const confirmPasswordError = $('#confirmPasswordError');
            const warningMessage = $('#warningMessage');

            function validatePassword(password) {
                return password.length >= 8;
            }

            function validateForm() {
                let isValid = true;
                const newPassword = newPasswordInput.val();
                const confirmPassword = confirmPasswordInput.val();

                // Reset errors
                newPasswordError.hide();
                confirmPasswordError.hide();
                newPasswordInput.removeClass('input-error');
                confirmPasswordInput.removeClass('input-error');
                warningMessage.hide();

                // Validate new password length
                if (!validatePassword(newPassword)) {
                    newPasswordError.text('Password must be at least 8 characters long').show();
                    newPasswordInput.addClass('input-error');
                    isValid = false;
                }

                // Validate confirm password
                if (newPassword !== confirmPassword) {
                    confirmPasswordError.text('Passwords do not match').show();
                    confirmPasswordInput.addClass('input-error');
                    isValid = false;
                }

                return isValid;
            }

            // Real-time validation
            newPasswordInput.on('input', function() {
                if (!validatePassword($(this).val())) {
                    newPasswordError.text('Password must be at least 8 characters long').show();
                    $(this).addClass('input-error');
                } else {
                    newPasswordError.hide();
                    $(this).removeClass('input-error');
                }
            });

            confirmPasswordInput.on('input', function() {
                if ($(this).val() !== newPasswordInput.val()) {
                    confirmPasswordError.text('Passwords do not match').show();
                    $(this).addClass('input-error');
                } else {
                    confirmPasswordError.hide();
                    $(this).removeClass('input-error');
                }
            });

            // Form submission
            form.on('submit', function(e) {
                e.preventDefault();

                if (validateForm()) {
                    // Show loading state
                    Swal.fire({
                        title: 'Please wait...',
                        allowOutsideClick: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    });

                    $.ajax({
                        url: form.attr('action'),
                        method: form.attr('method'),
                        data: form.serialize(),
                        success: function(response) {
                            Swal.close();

                            if (response.status === 'success') {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success!',
                                    text: 'Password has been reset successfully!',
                                    confirmButtonText: 'OK'
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        window.location.href = '/login';
                                    }
                                });
                            } else {
                                warningMessage.text(response.message).show();
                                
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: response.message,
                                    confirmButtonText: 'Try Again'
                                });
                            }
                        },
                        error: function(xhr) {
                            Swal.close();
                            
                            const errorMessage = xhr.responseJSON?.message || 'An unexpected error occurred.';
                            warningMessage.text(errorMessage).show();
                            
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: errorMessage,
                                confirmButtonText: 'OK'
                            });
                        }
                    });
                }
            });
        });
    </script>
</body>
</html>