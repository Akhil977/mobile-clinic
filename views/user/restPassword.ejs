<!DOCTYPE html>
<html lang="en">
<head>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .reset-form {
            background: #fff;
            border-radius: 16px;
            box-shadow: 0 8px 30px rgba(0,0,0,0.12);
            max-width: 500px;
            width: 90%;
            margin: 2rem auto;
            padding: 2.5rem;
            transform: translateY(-10px);
            opacity: 0;
            animation: formEntrance 0.6s cubic-bezier(0.23, 1, 0.32, 1) forwards;
        }

        @keyframes formEntrance {
            100% {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .input-group {
            position: relative;
            margin-bottom: 1.5rem;
        }

        .input-icon {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #a0aec0;
            transition: color 0.3s ease;
        }

        .form-input {
            width: 85%;
            padding: 14px 20px 14px 45px;
            border: 2px solid #e2e8f0;
            border-radius: 8px;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .form-input:focus {
            border-color: #4f46e5;
            box-shadow: 0 3px 10px rgba(79, 70, 229, 0.1);
        }

        .form-input:focus + .input-icon {
            color: #4f46e5;
        }

        .error-message {
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 0.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            opacity: 0;
            transform: translateY(-5px);
            transition: all 0.3s ease;
        }

        .error-message.visible {
            opacity: 1;
            transform: translateY(0);
        }

        .warning-message {
            color: #b7791f;
            font-size: 0.875rem;
            padding: 1rem;
            background-color: #fef9c3;
            border-radius: 8px;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
            opacity: 0;
            transform: translateY(-10px);
            transition: all 0.3s ease;
        }

        .warning-message.visible {
            opacity: 1;
            transform: translateY(0);
        }

        .submit-btn {
            width: 100%;
            padding: 1rem;
            background: linear-gradient(135deg, #6366f1 0%, #4f46e5 100%);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .submit-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(79, 70, 229, 0.3);
        }

        .form-title {
            text-align: center;
            font-size: 1.75rem;
            color: #1a202c;
            margin-bottom: 2rem;
            font-weight: 700;
        }

        @media (max-width: 480px) {
            .reset-form {
                padding: 1.5rem;
            }
        }
    </style>
</head>

<body class="animsition">
    <section class="bg0 p-t-104 p-b-116">
        <div class="container">
            <div class="reset-form">
                <h4 class="form-title">Reset Your Password</h4>

                <div class="warning-message" id="warningMessage">
                    <i class="fas fa-exclamation-triangle"></i>
                    <span></span>
                </div>

                <form action="/reset-password" method="post" id="resetForm" novalidate>
                    <div class="input-group">
                        <i class="input-icon fas fa-lock"></i>
                        <input class="form-input" 
                               type="password" 
                               name="newPassword" 
                               id="newPassword"
                               placeholder="New Password"
                               required>
                        <div class="error-message" id="newPasswordError">
                            <i class="fas fa-exclamation-circle"></i>
                            <span></span>
                        </div>
                    </div>

                    <div class="input-group">
                        <i class="input-icon fas fa-lock"></i>
                        <input class="form-input" 
                               type="password" 
                               name="confirmPassword" 
                               id="confirmPassword"
                               placeholder="Confirm Password"
                               required>
                        <div class="error-message" id="confirmPasswordError">
                            <i class="fas fa-exclamation-circle"></i>
                            <span></span>
                        </div>
                    </div>

                    <button type="submit" class="submit-btn">
                        Reset Password
                    </button>
                </form>
            </div>
        </div>
    </section>

    <script src="vendor/jquery/jquery-3.2.1.min.js"></script>
    <%- include ('component/script.ejs') %> 

    <script>
        $(document).ready(function() {
            const form = $('#resetForm');
            const newPasswordInput = $('#newPassword');
            const confirmPasswordInput = $('#confirmPassword');
            const newPasswordError = $('#newPasswordError');
            const confirmPasswordError = $('#confirmPasswordError');
            const warningMessage = $('#warningMessage');

            function showError(element, message) {
                element.find('span').text(message);
                element.addClass('visible');
                element.parent().find('.form-input').addClass('input-error');
            }

            function hideError(element) {
                element.removeClass('visible');
                element.parent().find('.form-input').removeClass('input-error');
            }

            function validatePassword(password) {
                return password.length >= 8;
            }

            function validateForm() {
                let isValid = true;
                const newPassword = newPasswordInput.val();
                const confirmPassword = confirmPasswordInput.val();

                hideError(newPasswordError);
                hideError(confirmPasswordError);
                warningMessage.removeClass('visible');

                if (!validatePassword(newPassword)) {
                    showError(newPasswordError, 'Password must be at least 8 characters');
                    isValid = false;
                }

                if (newPassword !== confirmPassword) {
                    showError(confirmPasswordError, 'Passwords do not match');
                    isValid = false;
                }

                return isValid;
            }

            newPasswordInput.on('input', function() {
                if (!validatePassword($(this).val())) {
                    showError(newPasswordError, 'Password must be at least 8 characters');
                } else {
                    hideError(newPasswordError);
                }
            });

            confirmPasswordInput.on('input', function() {
                if ($(this).val() !== newPasswordInput.val()) {
                    showError(confirmPasswordError, 'Passwords do not match');
                } else {
                    hideError(confirmPasswordError);
                }
            });

            form.on('submit', function(e) {
                e.preventDefault();

                if (validateForm()) {
                    Swal.fire({
                        title: 'Updating Password...',
                        allowOutsideClick: false,
                        didOpen: () => Swal.showLoading(),
                        background: '#f8fafc',
                        backdrop: 'rgba(255, 255, 255, 0.8)'
                    });

                    $.ajax({
                        url: form.attr('action'),
                        method: form.attr('method'),
                        data: form.serialize(),
                        success:function(response) {
    Swal.close();

    if (response.status === 'success') {
        Swal.fire({
            icon: 'success',
            title: 'Success!',
            text: 'Password has been reset successfully!',
            confirmButtonText: 'OK'
        }).then((result) => {
            if (result.isConfirmed) {
                // Check if user is logged in and redirect accordingly
                if (response.redirectTo) {
                    window.location.href = response.redirectTo;
                } else {
                    window.location.href = '/login';  // Default redirect
                }
            }
        });
    } else {
                                warningMessage.find('span').text(response.message);
                                warningMessage.addClass('visible');
                            }
                        },
                        error: function(xhr) {
                            Swal.close();
                            const errorMessage = xhr.responseJSON?.message || 'An error occurred';
                            warningMessage.find('span').text(errorMessage);
                            warningMessage.addClass('visible');
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: errorMessage,
                                confirmButtonColor: '#4f46e5'
                            });
                        }
                    });
                }
            });
        });
    </script>
</body>
</html>