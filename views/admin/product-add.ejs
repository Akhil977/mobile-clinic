<!DOCTYPE html>
<html>
<%- include ('component/head.ejs') %> 
<body class="hold-transition skin-blue sidebar-mini">
<div class="wrapper">
  <%- include ('component/header.ejs') %> 
  
  <!-- Left side column. contains the logo and sidebar -->
  <%- include ('component/aside.ejs') %> 
  <link href="../../public/aqdmin-assets/main.css" rel="stylesheet" type="text/css" />
  <!-- Content Wrapper. Contains page content -->
  <div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
      <h1>
        Dashboard
        <small>Control panel</small>
      </h1>
      <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">Dashboard</li>
      </ol>
    </section>

    <!-- Main content -->
    <head>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    </head>
    <style>
        /* Professional Product Add Page Styling */
        body {
            background-color: #f4f7f6;
        }

        .content-main {
            margin: 30px;
            margin-left: 280px;
            margin-right: 50px;
            transition: all 0.3s ease;
        }

        @media (max-width: 992px) {
            .content-main {
                margin-left: 20px;
                margin-right: 20px;
            }
        }

        .content-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            padding-bottom: 15px;
            border-bottom: 2px solid #e9ecef;
        }

        .content-title {
            font-size: 1.8rem;
            font-weight: 700;
            color: #2c3e50;
            margin: 0;
        }

        .card {
            background-color: #ffffff;
            border-radius: 12px;
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.08);
            border: none;
            transition: all 0.3s ease;
        }

        .card:hover {
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
            transform: translateY(-5px);
        }

        .card-body {
            padding: 30px;
        }

        /* Form Styling */
        .form-label {
            font-weight: 600;
            color: #34495e;
            margin-bottom: 10px;
            transition: color 0.3s ease;
        }

        .form-control,
        .form-select {
            border: 1px solid #d1d8e0;
            border-radius: 8px;
            padding: 12px 15px;
            font-size: 0.95rem;
            transition: all 0.3s ease;
            background-color: #f9fbfc;
        }

        .form-control:focus,
        .form-select:focus {
            border-color: #3498db;
            box-shadow: 0 0 0 0.2rem rgba(52, 152, 219, 0.15);
            background-color: white;
        }

        /* Error Message Styling */
        .error-message {
            color: #e74c3c;
            font-size: 0.85rem;
            margin-top: 5px;
            animation: fadeIn 0.3s ease;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* File Input Styling */
        .form-control[type="file"] {
            padding: 8px 12px;
            border: 2px dashed #e0e4e8;
            background-color: #f9fbfc;
        }

        .form-control[type="file"]:hover {
            border-color: #3498db;
        }

        /* Button Styling */
        .btn {
            background-color: #2ecc71;
            color: white;
            border: none;
            padding: 12px 25px;
            font-size: 1rem;
            font-weight: 600;
            border-radius: 8px;
            letter-spacing: 0.5px;
            transition: all 0.3s ease;
            text-transform: uppercase;
        }

        .btn:hover {
            background-color: #27ae60;
            transform: translateY(-3px);
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
        }

        /* Thumbnails Container */
        .thumbnails-container {
            display: flex;
            gap: 15px;
            overflow-x: auto;
            padding-bottom: 10px;
            scrollbar-width: thin;
            scrollbar-color: #3498db #e0e4e8;
        }

        .thumbnails-container::-webkit-scrollbar {
            height: 8px;
        }

        .thumbnails-container::-webkit-scrollbar-track {
            background: #e0e4e8;
            border-radius: 10px;
        }

        .thumbnails-container::-webkit-scrollbar-thumb {
            background-color: #3498db;
            border-radius: 10px;
        }

        .thumbnail {
            width: 120px;
            height: 120px;
            object-fit: cover;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }

        .thumbnail:hover {
            transform: scale(1.05);
        }

        /* Responsive Adjustments */
        @media (max-width: 768px) {
            .content-main {
                margin: 15px;
            }

            .card-body {
                padding: 20px;
            }

            .btn {
                width: 100%;
            }
        }

        /* Image Upload Section Styles */
        .image-upload-section {
            background-color: #f8f9fa;
            border-radius: 10px;
            padding: 20px;
            margin-top: 20px;
        }

        .image-upload-container {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .image-upload-row {
            display: flex;
            align-items: center;
            gap: 20px;
            background-color: white;
            padding: 15px;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }

        .image-upload-row:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 10px rgba(0, 0, 0, 0.15);
        }

        .image-preview {
            width: 150px;
            height: 150px;
            object-fit: cover;
            border-radius: 10px;
            border: 2px dashed #e0e4e8;
            transition: all 0.3s ease;
        }

        .image-preview:hover {
            border-color: #3498db;
        }

        .image-cropper {
            display: flex;
            align-items: center;
            gap: 15px;
            margin-top: 10px;
        }

        .image-cropper img {
            max-width: 300px;
            max-height: 200px;
            border-radius: 8px;
        }

        .save-button {
            background-color: #3498db;
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 6px;
            transition: all 0.3s ease;
        }

        .save-button:hover {
            background-color: #2980b9;
            transform: translateY(-2px);
        }

        .file-input {
            flex-grow: 1;
        }

        .file-input-wrapper {
            display: flex;
            align-items: center;
            gap: 15px;
            width: 100%;
        }
    </style>
   <!DOCTYPE html>
   <html>
   <head>
       <title>Add New Product</title>
       <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css">
       <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
       <style>
           .image-cropper {
               display: none;
               margin-top: 10px;
           }
           .image-preview {
               max-width: 100%;
               height: auto;
           }
           .error-message {
               color: red;
               font-size: 12px;
               margin-top: 5px;
           }
           .thumbnails-container {
               display: flex;
               gap: 10px;
               padding: 10px;
           }
           .thumbnail {
               position: relative;
               width: 100px;
               height: 100px;
           }
           .thumbnail img {
               width: 100%;
               height: 100%;
               object-fit: cover;
           }
           .remove-image-btn {
               position: absolute;
               top: -10px;
               right: -10px;
               background: red;
               color: white;
               border: none;
               border-radius: 50%;
               width: 20px;
               height: 20px;
               cursor: pointer;
           }
       </style>
   </head>
   <body>
       <section class="content-main">
           <div class="row">
               <div class="col-12">
                   <div class="content-header">
                       <h2 class="content-title">Add New Product</h2>
                   </div>
               </div>
               <div class="col-lg-8 mx-auto">
                   <div class="card mb-4">
                       <div class="card-body">
                           <form method="POST" action="/admin/addProducts" enctype="multipart/form-data"
                               id="addProductForm" onsubmit="return validateForm()">
                               <div class="mb-4">
                                   <label for="product_name" class="form-label">Product Name</label>
                                   <input type="text" placeholder="Type here" name="productName" class="form-control"
                                       id="product_name">
                                   <div id="productName-error" class="error-message"></div>
                               </div>
   
                               <div class="mb-4">
                                   <label class="form-label">Full Description</label>
                                   <textarea placeholder="Type here" id="descriptionid" name="description"
                                       class="form-control" rows="4"></textarea>
                                   <div id="description-error" class="error-message"></div>
                               </div>
                               <div class="row">
                                <div class="col-lg-4 mb-4">
                                    <label class="form-label">Brand</label>
                                    <input placeholder="Brand Name" name="brand" type="text" class="form-control">
                                    <div id="brand-error" class="error-message"></div>
                                </div>
                            </div>
   
                               <div class="row">
                                   <div class="col-lg-4 mb-4">
                                       <label class="form-label">Regular Price</label>
                                       <input placeholder="$" name="regularPrice" type="text" class="form-control">
                                       <div id="regularPrice-error" class="error-message"></div>
                                   </div>
                                   <div class="col-lg-4 mb-4">
                                       <label class="form-label">Sale Price</label>
                                       <input placeholder="$" name="salePrice" type="text" class="form-control">
                                       <div id="salePrice-error" class="error-message"></div>
                                   </div>
                                   <div class="col-lg-4 mb-4">
                                       <label class="form-label">Quantity</label>
                                       <input placeholder="" name="quantity" type="text" class="form-control">
                                       <div id="quantity-error" class="error-message"></div>
                                   </div>
                               </div>
   
                               <div class="row">
                                   <div class="col-lg-4 mb-4">
                                       <label class="form-label">Category</label>
                                       <select class="form-select" name="category">
                                           <% for(let i=0; i<cat.length; i++) { %>
                                               <option value="<%=cat[i].name %>"><%=cat[i].name %></option>
                                           <% } %>
                                       </select>
                                       <div id="category-error" class="error-message"></div>
                                   </div>
                               </div>
                             
   
                               <div class="card mb-4 image-upload-section">
                                   <div class="card-header">
                                       <h4>Choose Images</h4>
                                   </div>
                                   <div class="card-body">
                                       <div class="border row mb-3">
                                           <div id="addedImagesContainer" class="thumbnails-container"></div>
                                       </div>
                                       <div class="image-upload-container">
                                           <!-- First Image Upload -->
                                           <div class="image-upload-row mb-3">
                                               <div class="file-input-wrapper">
                                                   <img src="" alt="Image Preview" id="imgView1" class="image-preview">
                                                   <input class="form-control file-input" type="file" name="images"
                                                       id="input1" accept="image/png, image/jpeg, image/jpg">
                                               </div>
                                               <div class="image-cropper">
                                                   <img src="" id="croppedImg1" alt="Cropped Image">
                                                   <button type="button" id="saveButton1" class="btn btn-primary btn-sm save-button">Save Crop</button>
                                               </div>
                                           </div>
   
                                           <!-- Second Image Upload -->
                                           <div class="image-upload-row mb-3">
                                               <div class="file-input-wrapper">
                                                   <img src="" alt="Image Preview" id="imgView2" class="image-preview">
                                                   <input class="form-control file-input" type="file" name="images"
                                                       id="input2" accept="image/png, image/jpeg, image/jpg">
                                               </div>
                                               <div class="image-cropper">
                                                   <img src="" id="croppedImg2" alt="Cropped Image">
                                                   <button type="button" id="saveButton2" class="btn btn-primary btn-sm save-button">Save Crop</button>
                                               </div>
                                           </div>
   
                                           <!-- Third Image Upload -->
                                           <div class="image-upload-row mb-3">
                                               <div class="file-input-wrapper">
                                                   <img src="" alt="Image Preview" id="imgView3" class="image-preview">
                                                   <input class="form-control file-input" type="file" name="images"
                                                       id="input3" accept="image/png, image/jpeg, image/jpg">
                                               </div>
                                               <div class="image-cropper">
                                                   <img src="" id="croppedImg3" alt="Cropped Image">
                                                   <button type="button" id="saveButton3" class="btn btn-primary btn-sm save-button">Save Crop</button>
                                               </div>
                                           </div>
                                       </div>
                                   </div>
                               </div>
   
                               <div>
                                   <button class="btn btn-primary btn-md" type="submit">Publish</button>
                               </div>
                           </form>
                       </div>
                   </div>
               </div>
           </div>
       </section>
   
       <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
       <script>
           // Store croppers for each image
           let croppers = {};
   
           // Initialize event listeners for file inputs
           document.getElementById('input1').addEventListener('change', (e) => viewImage(e, 1));
           document.getElementById('input2').addEventListener('change', (e) => viewImage(e, 2));
           document.getElementById('input3').addEventListener('change', (e) => viewImage(e, 3));
   
           function viewImage(event, index) {
               const input = event.target;
               const imgView = document.getElementById(`imgView${index}`);
               const cropperContainer = document.querySelector(`#input${index}`).closest('.image-upload-row').querySelector('.image-cropper');
               const croppedImg = document.getElementById(`croppedImg${index}`);
   
               // Destroy existing cropper if any
               if (croppers[index]) {
                   croppers[index].destroy();
                   croppers[index] = null;
               }
   
               if (input.files && input.files[0]) {
                   const reader = new FileReader();
                   
                   reader.onload = function(e) {
                       // Set the source of the preview image
                       imgView.src = e.target.result;
                       
                       // Initialize cropper after image is loaded
                       imgView.onload = function() {
                           croppers[index] = new Cropper(imgView, {
                               aspectRatio: 1,
                               viewMode: 1,
                               guides: true,
                               background: false,
                               autoCropArea: 0.8,
                               zoomable: true,
                               center: true,
                               cropBoxResizable: true
                           });
                           
                           // Show the cropper container
                           cropperContainer.style.display = 'block';
                       };
   
                       // Setup save button handler
                       const saveButton = document.querySelector(`#saveButton${index}`);
                       saveButton.onclick = function() {
                           if (croppers[index]) {
                               // Get the cropped canvas
                               const croppedCanvas = croppers[index].getCroppedCanvas();
                               
                               // Set the cropped image
                               croppedImg.src = croppedCanvas.toDataURL('image/jpeg');
                               
                               // Convert canvas to blob and create new file input
                               croppedCanvas.toBlob((blob) => {
                                   const fileName = `cropped-image-${index}.jpg`;
                                   const croppedFile = new File([blob], fileName, { type: 'image/jpeg' });
                                   
                                   // Create a new FileList with the cropped image
                                   const dataTransfer = new DataTransfer();
                                   dataTransfer.items.add(croppedFile);
                                   
                                   // Update the original file input
                                   input.files = dataTransfer.files;
   
                                   // Add to thumbnails container
                                   addThumbnail(croppedCanvas.toDataURL('image/jpeg'), index);
                               }, 'image/jpeg');
                               
                               // Hide cropper container
                               cropperContainer.style.display = 'none';
                               
                               // Destroy cropper
                               croppers[index].destroy();
                               croppers[index] = null;
                           }
                       };
                   };
                   
                   reader.readAsDataURL(input.files[0]);
               }
           }
   
           function addThumbnail(imageUrl, index) {
               const container = document.getElementById('addedImagesContainer');
               
               // Check if thumbnail already exists for this index
               const existingThumbnail = container.querySelector(`[data-index="${index}"]`);
               if (existingThumbnail) {
                   existingThumbnail.remove();
               }
               
               const thumbnail = document.createElement('div');
               thumbnail.className = 'thumbnail';
               thumbnail.setAttribute('data-index', index);
               
               const img = document.createElement('img');
               img.src = imageUrl;
               img.alt = 'Thumbnail';
               
               const removeButton = document.createElement('button');
               removeButton.type = 'button';
               removeButton.className = 'remove-image-btn';
               removeButton.innerHTML = '×';
               removeButton.onclick = function() {
                   thumbnail.remove();
                   // Clear the file input
                   document.getElementById(`input${index}`).value = '';
                   // Clear the preview
                   document.getElementById(`imgView${index}`).src = '';
                   document.getElementById(`croppedImg${index}`).src = '';
               };
               
               thumbnail.appendChild(img);
               thumbnail.appendChild(removeButton);
               container.appendChild(thumbnail);
           }
   
           function validateForm() {
               let isValid = true;
               const requiredFields = ['productName', 'description', 'regularPrice', 'category'];
               
               requiredFields.forEach(field => {
                   const input = document.querySelector(`[name="${field}"]`);
                   const errorElement = document.getElementById(`${field}-error`);
   
                   if (!input.value.trim()) {
                       errorElement.textContent = `${field.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())} is required`;
                       isValid = false;
                   } else {
                       errorElement.textContent = '';
                   }
               });
   
               const totalImages = document.querySelectorAll('#addedImagesContainer .thumbnail').length;
               if (totalImages < 3 || totalImages > 4) {
                   Swal.fire({
                       icon: 'error',
                       title: 'Image Count Invalid',
                       text: 'You must upload between 3 and 4 images',
                       confirmButtonColor: '#3085d6'
                   });
                   return false;
               }
   
               if (isValid) {
                   return new Promise((resolve) => {
                       Swal.fire({
                           title: 'Add Product',
                           text: 'Are you sure you want to add this product?',
                           icon: 'warning',
                           showCancelButton: true,
                           confirmButtonColor: '#3085d6',
                           cancelButtonColor: '#d33',
                           confirmButtonText: 'Yes, add it!'
                       }).then((result) => {
                           if (result.isConfirmed) {
                               document.getElementById('addProductForm').submit();
                           }
                       });
                   });
               }
   
               return false;
           }
       </script>
   </body>
   </html>